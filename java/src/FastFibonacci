static final long mod = 1000000007;
    
    //2  methods copied from http://codereview.stackexchange.com/questions/51864/calculate-fibonacci-in-olog-n
    public static long fib(long n) {
        if (n <= 1) return n;

        long[][] result = {{1, 0}, {0, 1}}; // identity matrix.
        long[][] fiboM = {{1, 1}, {1, 0}};

        while (n > 0) {
            if (n%2 == 1) {
                multMatrix(result, fiboM);
            }
            n = n / 2;
            multMatrix(fiboM, fiboM);
        }

        return result[1][0];
    }

    private static void multMatrix(long[][] m, long [][] n) {
        long a = ((m[0][0] * n[0][0])%mod +  (m[0][1] * n[1][0])%mod)%mod;
        long b = ((m[0][0] * n[0][1])%mod +  (m[0][1] * n[1][1])%mod)%mod;
        long c = ((m[1][0] * n[0][0])%mod +  (m[1][1] * n[0][1])%mod)%mod;
        long d = ((m[1][0] * n[0][1])%mod +  (m[1][1] * n[1][1])%mod)%mod;

        m[0][0] = a;
        m[0][1] = b;
        m[1][0] = c;
        m[1][1] = d;
    }
        
    static long fastFib(long n){
        if(n>=0){
            return fib(n);
        }
        n = -n;
        long ans = fib(n);
        if(n%2==0){
            ans = -ans;
        }
        return ans;
    }
